# üîß Module: ForwardHidden
# üë§ Developer: @Hikimuro
# üß© Version: 1.0.1

from telethon.tl.types import Message, Channel
from .. import loader, utils
import os

@loader.tds
class ForwardHiddenMod(loader.Module):
    strings = {"name": "ForwardHidden"}

    @loader.command()
    async def getid(self, message: Message):
        """[username –∏–ª–∏ –ø—É—Å—Ç–æ] ‚Äî –ø–æ–ª—É—á–∏—Ç—å chat_id –∫–∞–Ω–∞–ª–∞, –≥—Ä—É–ø–ø—ã –∏–ª–∏ —á–∞—Ç–∞"""
        args = utils.get_args_raw(message)
        if args:
            try:
                entity = await message.client.get_entity(args)
            except Exception as e:
                return await utils.answer(message, f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ: {e}")
        else:
            entity = await message.get_chat()

        chat_id = entity.id
        title = getattr(entity, "title", "‚Äî")
        await utils.answer(message, f"<b>üÜî chat_id:</b> <code>{chat_id}</code>\n<b>üìõ –ù–∞–∑–≤–∞–Ω–∏–µ:</b> {title}")

    @loader.command()
    async def listch(self, message: Message):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –∏ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø, –≥–¥–µ —Ç—ã –ø–æ–¥–ø–∏—Å–∞–Ω"""
        dialogs = await message.client.get_dialogs()
        lines = []
        ids = set()
        for d in dialogs:
            entity = d.entity
            if isinstance(entity, Channel) and (entity.megagroup or entity.broadcast):
                chat_id = entity.id
                if chat_id in ids:
                    continue
                ids.add(chat_id)

                title = entity.title or "‚Äî"
                lines.append(f"{title}\nüÜî <code>{chat_id}</code>\n")

        if not lines:
            await utils.answer(message, "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∫–∞–Ω–∞–ª–æ–≤/—Å—É–ø–µ—Ä–≥—Ä—É–ø–ø.")
            return

        text = "<b>üìã –ö–∞–Ω–∞–ª—ã –∏ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã, –≥–¥–µ —Ç—ã –ø–æ–¥–ø–∏—Å–∞–Ω:</b>\n\n" + "\n".join(lines)
        await utils.answer(message, text)

    @loader.command()
    async def fh(self, message: Message):
        """<chat_id> <–∫–æ–ª-–≤–æ> ‚Äî –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ–∫—É—â–∏–π —á–∞—Ç (–æ–±—Ö–æ–¥ –∑–∞–ø—Ä–µ—Ç–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏)"""
        args = utils.get_args_raw(message)
        if not args or len(args.split()) < 2:
            return await utils.answer(
                message,
                "<b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:</b> <code>.fh 1655808918 20</code>\n"
                "‚ùì –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å chat_id: –∏—Å–ø–æ–ª—å–∑—É–π .listch –∏–ª–∏ .getid"
            )

        chat_id_str, count_str = args.split()
        try:
            count = int(count_str)
        except ValueError:
            return await utils.answer(message, "‚ö†Ô∏è –£–∫–∞–∂–∏ —á–∏—Å–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–π.")

        try:
            chat_id = int(chat_id_str)
        except Exception:
            try:
                entity = await message.client.get_entity(chat_id_str)
                chat_id = entity.id
            except Exception as e:
                return await utils.answer(message, f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å chat_id: {e}")

        msgs = []
        try:
            async for msg in message.client.iter_messages(chat_id, limit=count):
                if msg.text or msg.media:
                    msgs.append(msg)
        except Exception as e:
            return await utils.answer(message, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")

        if not msgs:
            return await utils.answer(message, "‚ùå –ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π.")

        await utils.answer(message, f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ {len(msgs)} —Å–æ–æ–±—â–µ–Ω–∏–π...")

        for msg in reversed(msgs):
            text = msg.text or ""
            sender = await msg.get_sender()
            author = f"\n\nüë§ <b>–û—Ç:</b> {getattr(sender, 'first_name', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}"

            try:
                if msg.media:
                    file_path = await message.client.download_media(msg.media)
                    await message.client.send_file(
                        message.chat_id,
                        file_path,
                        caption=text + author if text else author,
                    )
                    if file_path and os.path.exists(file_path):
                        os.remove(file_path)
                else:
                    await message.client.send_message(
                        message.chat_id,
                        text + author
                    )
            except Exception as e:
                await utils.answer(message, f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

        await utils.answer(message, "‚úÖ –ì–æ—Ç–æ–≤–æ.")
