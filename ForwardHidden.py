# üîß Module: ForwardHidden
# üë§ Developer: @Hikimuro
# üß© Version: 1.0.0

from telethon.tl.types import Message
from .. import loader, utils

@loader.tds
class ForwardHiddenMod(loader.Module):
    """–ö–æ–ø–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —á–∞—Ç–æ–≤ —Å –∑–∞–ø—Ä–µ—Ç–æ–º –ø–µ—Ä–µ—Å—ã–ª–∫–∏ (–≤–∫–ª—é—á–∞—è –∫–Ω–æ–ø–∫–∏ –∏ –º–µ–¥–∏–∞)

    üìå –ö–æ–º–∞–Ω–¥—ã:
    .fh <chat_id> <–∫–æ–ª-–≤–æ> ‚Äî –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å <–∫–æ–ª-–≤–æ> —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ <chat_id> –≤ —Ç–µ–∫—É—â–∏–π —á–∞—Ç
    """

    strings = {"name": "ForwardHidden"}

    @loader.command()
    async def fh(self, message: Message):
        """<chat_id> <–∫–æ–ª-–≤–æ> ‚Äî –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ–∫—É—â–∏–π —á–∞—Ç"""
        args = utils.get_args_raw(message)
        if not args or len(args.split()) < 2:
            return await utils.answer(
                message,
                "<b>–ü—Ä–∏–º–µ—Ä:</b> <code>.fh -1001234567890 20</code>\n"
                "–°–∫–æ–ø–∏—Ä—É–µ—Ç 20 —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞."
            )

        chat_id, count = args.split()
        try:
            count = int(count)
        except ValueError:
            return await utils.answer(message, "‚ö†Ô∏è –£–∫–∞–∂–∏ —á–∏—Å–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–π.")

        msgs = []
        async for msg in message.client.iter_messages(int(chat_id), limit=count):
            if msg.text or msg.media:
                msgs.append(msg)

        if not msgs:
            return await utils.answer(message, "‚ùå –ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π.")

        await utils.answer(message, f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ {len(msgs)} —Å–æ–æ–±—â–µ–Ω–∏–π...")

        for msg in reversed(msgs):
            text = msg.text or ""
            markup = msg.reply_markup
            sender = await msg.get_sender()
            author = f"\n\nüë§ <b>–û—Ç:</b> {getattr(sender, 'first_name', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}"

            if msg.media:
                await message.client.send_file(
                    message.chat_id,
                    msg.media,
                    caption=text + author,
                    reply_markup=markup
                )
            else:
                await message.client.send_message(
                    message.chat_id,
                    text + author,
                    reply_markup=markup
                )

        await utils.answer(message, "‚úÖ –ì–æ—Ç–æ–≤–æ.")
